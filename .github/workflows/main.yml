---
on:
  workflow_call:
    inputs:
      project_id:
        required: true
        type: string
    secrets:
      SERVICE_ACCOUNT_KEY:
        required: true
      SHOPIFY_API_KEY:
        required: true
      SHOPIFY_API_SECRET:
        required: true
      
env:
  # PROJECT_ID: gleaming-terra-371204 - USE IT IN PARENT .YML's
  GAR_LOCATION: us-west1
  REGION: us-west1
  PORT: 8081
  SCOPES: unauthenticated_read_checkouts,unauthenticated_write_checkouts,unauthenticated_read_product_listings

  # Those two items must be created prior to the running in all GC Project
  SERVICE: real-shopify-app-service
  REPOSITORY: real-shopify-app
  
  # important! HOST env var must be specified inside the GCR Service

jobs:
  build-push-deploy-gcr:
    name: Deploy Shopify App
    runs-on: ubuntu-latest    

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Setup Cloud CLI
      uses: google-github-actions/setup-gcloud@v0.2.0
      with:
        project_id: ${{ inputs.project_id }}
        service_account_key: ${{ secrets.SERVICE_ACCOUNT_KEY }}
        export_default_credentials: true

    - name: Build Docker Image
      run: docker build -f Dockerfile --build-arg SCOPES=${{ env.SCOPES }} --build-arg SHOPIFY_API_KEY=${{ secrets.SHOPIFY_API_SECRET }} --build-arg SHOPIFY_API_SECRET=${{ secrets.SHOPIFY_API_KEY }} --build-arg PORT=${{ env.PORT }} -t "${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ inputs.project_id }}/${{ env.REPOSITORY }}/${{ env.SERVICE }}:${{ github.sha }}" ./
      
    - name: Configure Docker Client
      run: |-
        gcloud auth configure-docker "${{ env.GAR_LOCATION }}-docker.pkg.dev" --quiet

    - name: Push Docker Image to Comtainr registry (GCR)
      env:
        GIT_TAG: v0.1.0
      run: |-
        docker push "${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ inputs.project_id }}/${{ env.REPOSITORY }}/${{ env.SERVICE }}:${{ github.sha }}"

    - name: Deploy to Cloud Run
      id: deploy
      uses: google-github-actions/deploy-cloudrun@v0
      with:
        service: ${{ env.SERVICE }}
        region: ${{ env.REGION }}
        image: ${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ inputs.project_id }}/${{ env.REPOSITORY }}/${{ env.SERVICE }}:${{ github.sha }}

    # If required, use the Cloud Run url output in later steps
    - name: Show Output
      run: echo ${{ steps.deploy.outputs.url }}